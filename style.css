*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
html{
    min-height: 100%;
    font-family: Verdana, Geneva, Tahoma, sans-serif;
}
body{
    margin: 0;
    background-color: blanchedalmond;
    min-height: 100%;
    height: 2000px;
}
main{
    padding: 2.5%;
}
h1{
    font-size: 78px;
    color: whitesmoke;
    text-shadow: 4px 4px 0 brown;
}
h3{
    font-size: 48px;
    text-decoration: underline;
    text-align: center;
    color: chocolate;
    text-shadow: 2px 2px 0 khaki;
    padding: 10px 0 10px 0;
}
/* ============= Header =============== */
header{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: 15px;
    background-color: chocolate;
    height: 150px;
}
header ul{
    list-style: none;
}
/* lo ven más adelante */
header a, header a:link, header a:visited, header a:hover, header a:active{
    color: whitesmoke;
    text-decoration: none;
}
.logo{
    border-radius: 50%;
    max-width: 100px;
}
.logoHolder{
    background-color: brown;
    padding: 5px;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-content: center;
}


/* === Flex == */
/* .contenedorFlex{
    display: flex;
    height: 600px;
    justify-content: space-around;
    align-items: center;
    background-color: aquamarine;
}
.contenedorFlex img{
    max-width: 200px;
    max-height: 200px;
} */

/* ========== Grids ============ */
/* Grids requiere de un contenedor padre con hijos */
/* se le aplica grids al padre para ordenar a los hijos */

/* ~~ propiedades del padre ~~ */

/* display: grid; */
/* le indica al ordenador de que se utiliza grid */

/* grid template 
        grid-template-columns: valor1 valor2...;
        grid-template-rows: valor valor2...; 
    Los valores son unidades de tamaño. Se pone un valor por columna/fila y se separan con espacio 
    Se puede asignar nombres a las lineas si uno desea poniendo [nombre] entre valores
        grid-template-columns: [linea1] valor1 [linea2] valor2...;
*/
/* fr (exclusivo grids)
Los fr son unidades especiales que dividen todo el espacio restante que es usado por unidades no fr sobre el total de nro. de fr. 
    4fr => 25% por fr
    100px 2fr 150px 1fr=> (tamañoTotal-250px)/3 por fr
*/
/* función repeat (exclusivo grids)
    Se utiliza cuando hay columnas/filas consecutivas con el mismo valor
    Su estructura es:
        repeat(nro, x)
            nro: es el número de repeticiones
            x es el calor en unidades de tamaño que se repite
                repeat(4, 10%) => 10% 10% 10% 10%
    Se puede usar en compinación con otros valores
        grid-template-columns: 10vw repeat(4, 150px) 19%; <== es valido 
*/
/* función minmax (exclusivo grids)
    Se utiliza para asignar valores mínimos y máximos a una columna/fila
    Su estructura es
        minmax(minimo, maximo)
            minimo: el valor mínimo que toma la columna/fila
            máximo: el valor máximo que toma la columna/fila
    Ayuda con responsividad
*/

/* grid auto
    grid-auto-columns: valor;
    grid-auto-rows: valor;
    especifica el tamaño de una nueva columna/fila generada
*/

/* grid template area
        grid-template-area:
        ""
        ""
        ...
        "";
    especifica como se posicionan los elementos nombrados con grid-area.
    si se nombra 2 veces o más 1 elemento, este ocupa más celdas. Estas celdas tienen que ser consecutivas y formar un rectángulo (los cuadrados son rectangulos), formas como S no son posibles
        "elemento1 elemento1 elemento2"
            aca el elemento1 ocupa 2 celdas
    si desea dejar una celda vacia, se pone un .
        "elemento1 . elemento2"
            aca a algo de 3 columnas, la celda del medio queda vacia
*/

/* estan todos los justify/align/place-item/content */

/* ~~ propiedades del hijo ~~ */

/* grid-column/row
    para que un elemento se autoposicione
        grid-column: linea-inicial / linea-final;
        grid-row: linea-inicial / linea-final;
*/
/* justify/align 
    se pueden aliner/justificar con
        justify-self
        align-self
        place-self (combina las 2 anteriores)
*/


/* Grid telefono */
.contenedor{
    margin: 0;
    background-color: crimson;
    width: 100%;
    height: 1000px;
    padding: 2.5%;
    /* INDISPENSABLE PARA GRID */
    display: grid;
    justify-content: center;
    align-items: center;
    grid-template-columns: repeat(3, 220px);
    /* es lo mismo que */
    /* grid-template-columns: 220px 220px 220px; */
    /* TAMAÑOS DISTINTOS */
    /* grid-template-column: 1fr 300px 1000px */
    grid-template-rows: repeat(4, 220px);
    /* se genera un texto con "" por cada fila */
    /* hace referencia a los grid-area de lso hijos */
    /* cada casilla/celda se separa con un espacio */
    /* GAP  */
    gap: 10px;
    /* column-gap: 10px;
    row-gap: 10px; */
    grid-template-areas: 
    "siete ocho nueve"
    "cuatro cinco seis"
    "uno dos tres"
    "cero cero cero"
    ;
}
/* Hijos de grid */
.numeroSiete{
    grid-area: siete;
    /* grid-column: 2/4;
    grid-row: 4/5 */
}
.numeroOcho{
    grid-area: ocho;
}
.numeroNueve{
    grid-area: nueve;
}
.numeroCuatro{
    grid-area: cuatro;
}
.numeroCinco{
    grid-area: cinco;
}
.numeroSeis{
    grid-area: seis;
}
.numeroUno{
    grid-area: uno;
}
.numeroDos{
    grid-area: dos;
}

.numeroTres{
    grid-area: tres;
}
.numeroCero{
    grid-area: cero;
}

.contBoton{
    background-color: darkgreen;
    width: 100%;
    height: 100%;
    justify-self: center;
    align-self: center;
    display: flex;
    justify-content: center;
    align-items: center;
}
.nro{
    background-color: darkslateblue;
    color: azure;
    font-weight: 500;
    font-size: 58px;
    height: 90%;
    width: 90%;
    text-align: center;
    display: flex;
    align-items: center;
    justify-content: center ;
}
/* =================================== */
/* Galeria */
.gallery{
    display: grid;
    grid-template-columns: repeat(4, 300px);
    grid-template-rows: repeat(3, 200px);
    gap: 15px;
    padding: 1%;
    justify-content: center;
}
.gridAnimal{
    overflow: hidden;
    width: 100%;
    display: flex;
    align-items: center;
    border-radius: 10px;
}
.gridAnimal img{
    width: 100%;
    object-fit: cover;
}
.gato{
    grid-column: 1/3;
    grid-row: 1/3;
}
.tortuga{
    grid-column: 3/4;
    grid-row: 1/2;
}
.red{
    border-color: blue;
    border-width: 3px;
    border-style: dashed;
}
.gallo{
    grid-column: 4/5;
    grid-row: 1/2;
}
.saltamontes{
    grid-column: 3/5;
    grid-row: 2/3;
}
.medusa{
    grid-column: 1/2;
    grid-row: 3/4;
}
.buho{
    grid-column: 2/4;
    grid-row: 3/4;
}
.serpiente{
    grid-column: 4/5;
    grid-row: 3/4;
}
/*  ==================================*/
/* auto grids */
.autoGrid{
    height: 600px;
    display: grid;
    grid-template-columns: repeat(4, 150px);
    grid-auto-rows: minmax(50px, 350px);
    align-items: center;
    justify-items: center;
    justify-content: center;
    background-color: aquamarine;
}

.autoGridColumns{
    display: grid;
    /* le indico a grid que llene en columnas en vez de filas */
    grid-auto-flow: column;
    grid-template-rows: repeat(2, 150px);
    grid-auto-columns: 250px;
    align-items: center;
    justify-items: center;
    justify-content: center;
    background-color: lemonchiffon;
}

.autoGridExtra{
    display: grid;
    grid-template-columns: repeat(3, 150px);
    grid-template-rows: 400px 200px;
    grid-auto-rows: 250px;
    align-items: center;
    justify-items: center;
    justify-content: center;
    background-color: lavender;
}
.perro{
    width: 100%;
}
/* Media queries */

/*
media 
    estructura
        @media(condicion){
            css
        }
    condiciones
        width:
            max-width
            min-width
        interesante:
            display-mode
            orientation
        otras (no les den importancio):
            any-hover
            any-pointer
            aspect-ratio
            color
            color-gamut
            color-index
            device-aspect-ratio Deprecated
            device-height Deprecated
            device-width Deprecated
            dynamic-range
            forced-colors
            grid
            height
            hover
            inverted-colors
            monochrome
            overflow-block
            overflow-inline
            pointer
            prefers-color-scheme
            prefers-contrast
            prefers-reduced-motion
            resolution
            scripting
            update
            video-dynamic-range
    and: nos permite utilizar más de una condición
        @media (condicion) and (condicion){
            css
        }
    ejemplo: https://codepen.io/andrespatafm/pen/popBwzp
*/

/* Breakpoints de Pantallas (nos fijamos el width en px)
    PC:
        1920
        1366 (Laptop)
    Tablet
        1024
        720
    Celular
        420
        320
*/

/* max escriben de mayor a menor */
/* min escriben de menor a mayor */


/* sin prefijos TIENE QUE SER IDENTICO */
/* @media (width: 1366px){
    body{
        background-color: green;
    }
} */

/* A- 500px que color tiene */
/* B- 1250px que color tiene */
/* c- 1700px que color tiene */
/* @media screen and (min-width: 1000px) {
    body {
        background-color: blueviolet;
    }
}
@media screen and (min-width: 1500px) {
    body {
        background-color: red;
    }
} */

@media screen and (max-width: 1366px) {
    .gallery{
        grid-template-columns: repeat(2, 300px);
        grid-auto-rows: 200px;
    }
    .tortuga{
        grid-column: 1/2;
        grid-row: 3/4;
    }
    .gallo{
        grid-column: 2/3;
        grid-row: 3/4;
    }
    .saltamontes{
        grid-column: 1/3;
        grid-row: 4/5;
    }
    .medusa{
        grid-column: 1/2;
        grid-row: 5/6;
    }
    .serpiente{
        grid-column: 2/3;
        grid-row: 5/6;
    }
    .buho{
        grid-column: 1/3;
        grid-row: 6/7;
    }
}
/* 720 */
@media screen and (max-width: 720px) {
    .contenedor{
        grid-template-columns: repeat(2, 220px);
        grid-auto-rows: 220px;
        grid-template-areas: 
        "ocho nueve"
        "seis siete"
        "cuatro cinco"
        "dos tres"
        "uno ."
        "cero cero"
        ;
    }
    .gallery{
        grid-template-columns: 300px;
    }
    .gato{
        grid-column: 1/2;
        grid-row: 1/2;
    }
    .tortuga{
        grid-column: 1/2;
        grid-row: 2/3;
    }
    .gallo{
        grid-column: 1/2;
        grid-row: 3/4;
    }
    .saltamontes{
        grid-column: 1/2;
        grid-row: 4/5;
    }
    .medusa{
        grid-column: 1/2;
        grid-row: 5/6;
    }
    .serpiente{
        grid-column: 1/2;
        grid-row: 6/7;
    }
    .buho{
        grid-column: 1/2;
        grid-row: 7/8;
    }
}
@media screen and (max-width: 460px) {
    .contenedor{
        grid-template-columns: 220px;
        height: max-content;
        /* grid-template-rows: 220px; */
        grid-template-areas: 
        "nueve"
        "ocho"
        "siete"
        "seis"
        "cinco"
        "cuatro"
        "tres"
        "dos"
        "uno"
        "cero"
        "cero"
        ;
    }
}
@media screen and (display-mode: fullscreen) {
    body {
        background-color: black;
    }
}